Cadastros ADM:

Cadastro de Categoria (Nao Precisa de CRUD 1ª versao) - Filtros, Suportes, Torneiras, Acessórios
    - categoria por / ing / esp

'use strict';

const mongoose = require('mongoose');
const Schema = mongoose.Schema;

const schema = new Schema({
    name: { type: String, required: true },
    description: { type: String },
    is_menu: { type: Boolean },
    menu_position: { type: Number },
    active: { type: Boolean, default: true },
    created: { type: Date, default: Date.now() },
    changed: { type: Date }
});

module.exports.Category = mongoose.model('category', schema, 'categories');




Cadastro de Cor (Nao Precisa de CRUD 1ª versao) - Branco, Prata, Preto, Cinza
    - Cor por / ing / esp

'use strict';

const mongoose = require('mongoose');
const Schema = mongoose.Schema;

const schema = new Schema({
    name: { type: String, required: true },
    description: { type: String },
    hexadecimal_code: { type: String },
    is_menu: { type: Boolean },
    menu_position: { type: Number },
    active: { type: Boolean, default: true },
    created: { type: Date, default: Date.now() },
    changed: { type: Date }
});

module.exports.Color = mongoose.model('color', schema, 'colors');


Cadastro de Produtos (um a um manual)
    - Status
    - Código
    - Nome por
    - Nome ing
    - Nome esp
    - Categoria (Lista Categoria)
    {
        - Cor (Lista cor /  multipla opção)
        - Valor R$
        - Valor U$
    }
    - Foto (n fotos)

'use strict';

const mongoose = require('mongoose');
const Schema = mongoose.Schema;

const schema = new Schema({
    seller_id: { type: Number },
    created: { type: Date, required: true, default: Date.now },
    changed: { type: Date },
    released_seller: { type: Boolean, default: false },
    seller_internal_id: { type: String },
    seller_sku: { type: String },
    magento_id: { type: Number },
    sku: { type: String },
    name: { type: String },
    attribute_set_id: { type: Number },
    price: { type: Number },
    special_price: { type: Number },
    begin_date_special_price: { type: Date },
    end_date_special_price: { type: Date },
    status: { type: Number },
    visibility: { type: Number },
    type_id: { type: String },
    product_parent_id: { type: String },
    images: [{
        _id: false,
        url: { type: String, require: true },
        key: { type: String },
        is_master: { type: Boolean, default: false }
    }],
    group_price: [{
        _id: false,
        customer_group_id: { type: String },
        price: { type: Number }
    }],
    extension_attributes: {
        website_ids: [{
            type: Number
        }],
        category_links: [{
            position: { type: Number },
            magento_id: { type: String },
            internal_id: { type: String },
            _id: false
        }],
        stock_item: {
            qty: { type: Number }
        }
    },
    kit: [{
        product_id: { type: String },
        qty: { type: String }
    }],
    to_integrate_seller: {
        type: Boolean
    },
    to_update_seller: {
        type: Boolean
    }

});

module.exports.Product = mongoose.model('product', schema, 'products');




Cadastro de Clientes
    - Documento (sem máscara)
    - Nome
    - Endereço (rua, nr e complemento) + Bairro +  Cidade + Estado
    - CEP
    - País
    - Telefone (lista)
    - Email

Pedidos (gestão de pedidos visão admin / visão ecom histórico + novo pedido)
    - Status (Novo / Processando / Concluído)
    - Cliente
    - Itens (lista de itens)
    - Valor Total (R$ / US$ fora do Brasil)


mongo ds139951.mlab.com:39951/gmold -u admin -p admin123
mongodb://admin:admin123@ds139951.mlab.com:39951/gmold